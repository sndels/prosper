#version 450

layout(local_size_x = 16, local_size_y = 16) in;
layout(binding = 0, rgba16f) uniform readonly image2D inColor;
layout(binding = 1, rgba8) uniform image2D outColor;

// From http://filmicworlds.com/blog/filmic-tonemapping-operators/
// https://www.slideshare.net/ozlael/hable-john-uncharted2-hdr-lighting
vec3 Uncharted2Tonemap(vec3 color)
{
    float A = 0.15; // Shoulder strength
    float B = 0.50; // Linear strength
    float C = 0.10; // Linear angle
    float D = 0.20; // Toe strength
    float E = 0.02; // Toe numerator
    float F = 0.30; // Toe denominator
    return ((color * (A * color + C * B) + D * E) /
            (color * (A * color + B) + D * F)) -
           E / F;
}

vec3 tonemap(vec3 color)
{
    float exposure = 1.0;
    float gamma = 2.2;
    float linearWhite = 11.2;
    vec3 outColor = Uncharted2Tonemap(color * exposure);
    outColor /= Uncharted2Tonemap(vec3(linearWhite));
    return pow(outColor, vec3(1 / gamma));
}

void main()
{
    ivec2 res = imageSize(inColor);
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(coord, res)))
    {
        return;
    }

    vec3 color = imageLoad(inColor, coord).xyz;
    imageStore(outColor, coord, vec4(tonemap(color), 1));
}
