#pragma shader_stage(compute)

layout(push_constant) uniform ToneMapPC { float exposure; }
PC;

layout(local_size_x = 16, local_size_y = 16) in;
layout(binding = 0, rgba16f) uniform readonly image2D inColor;
layout(binding = 1, rgba8) uniform image2D outColor;

// From Krzysztof Narkowicz
// https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/
vec3 ACESFilm(vec3 x)
{
    float a = 2.51f;
    float b = 0.03f;
    float c = 2.43f;
    float d = 0.59f;
    float e = 0.14f;
    return clamp((x * (a * x + b)) / (x * (c * x + d) + e), 0, 1);
}

vec3 tonemap(vec3 color)
{
    float gamma = 2.2;
    vec3 outColor = ACESFilm(color * PC.exposure);
    return pow(outColor, vec3(1 / gamma));
}

void main()
{
    ivec2 res = imageSize(inColor);
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(coord, res)))
    {
        return;
    }

    vec3 color = imageLoad(inColor, coord).xyz;
    imageStore(outColor, coord, vec4(tonemap(color), 1));
}
