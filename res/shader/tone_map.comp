#pragma shader_stage(compute)

#extension GL_EXT_shader_image_load_formatted : require

layout(push_constant) uniform ToneMapPC
{
    float exposure;
    uint zoom;
}
PC;

layout(binding = 0) uniform readonly image2D inColor;
layout(binding = 1) uniform image2D outColor;

// From Krzysztof Narkowicz
// https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/
vec3 ACESFilm(vec3 x)
{
    float a = 2.51f;
    float b = 0.03f;
    float c = 2.43f;
    float d = 0.59f;
    float e = 0.14f;
    return clamp((x * (a * x + b)) / (x * (c * x + d) + e), 0, 1);
}

vec3 tonemap(vec3 color)
{
    float gamma = 2.2;
    vec3 outColor = ACESFilm(color * PC.exposure);
    return pow(outColor, vec3(1 / gamma));
}

layout(local_size_x = GROUP_X, local_size_y = GROUP_Y) in;
void main()
{
    ivec2 res = imageSize(inColor);
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(coord, res)))
    {
        return;
    }

    ivec2 inCoord = coord;
    if (PC.zoom == 1)
    {
        // Zoom in a quarter res windoe approximately at the center of the full
        // render view
        ivec2 center = res / 2;
        ivec2 topLeft = center - res / 8;
        inCoord = topLeft + coord / 4;
    }

    vec3 color = imageLoad(inColor, inCoord).xyz;
    imageStore(outColor, coord, vec4(tonemap(color), 1));
}
