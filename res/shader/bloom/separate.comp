#pragma shader_stage(compute)

#extension GL_EXT_shader_image_load_formatted : require

#include "../shared/shader_structs/push_constants/bloom/separate.h"

layout(set = 0, binding = 0) uniform readonly image2D inIllumination;
layout(set = 0, binding = 1) uniform image2D outHighlights;

layout(push_constant) uniform PushConstants { SeparatePC PC; };

layout(local_size_x = GROUP_X, local_size_y = GROUP_Y) in;
void main()
{
    ivec2 inRes = imageSize(inIllumination);
    ivec2 outRes = imageSize(outHighlights);
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(coord, outRes)))
    {
        return;
    }

    vec3 illumination = imageLoad(inIllumination, coord).rgb;
    vec3 highlight = max(illumination - PC.threshold, vec3(0));
    imageStore(outHighlights, coord, vec4(highlight, 0));
}
