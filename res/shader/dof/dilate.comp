#pragma shader_stage(compute)

#extension GL_EXT_shader_image_load_formatted : require

// Based on A Life of a Bokeh by Guillaume Abadie
// https://advances.realtimerendering.com/s2018/index.htm

layout(set = 0, binding = 0) uniform texture2D inTileMinMaxCoC;
layout(set = 0, binding = 1) uniform writeonly image2D outDilatedTileMinMaxCoC;
layout(set = 0, binding = 2) uniform sampler nearestSampler;

layout(push_constant) uniform DilatePC
{
    ivec2 res;
    vec2 invRes;
    int gatherRadius;
}
PC;

layout(local_size_x = GROUP_X, local_size_y = GROUP_Y) in;
void main()
{
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(coord, PC.res)))
        return;

    // TODO:
    // subgroup gather?
    // group gather?
    // needs a layered gather as dilate reads across group boundaries
    float dilatedMinCoC = 1.f / 0.f;  // inf
    float dilatedMaxCoC = -1.f / 0.f; //-inf
    for (int i = -PC.gatherRadius; i <= PC.gatherRadius; ++i)
    {
        for (int j = -PC.gatherRadius; j <= PC.gatherRadius; ++j)
        {
            ivec2 c = coord + ivec2(i, j);
            vec2 uv = (c + .5) * PC.invRes;

            vec2 minMaxCoC =
                texture(sampler2D(inTileMinMaxCoC, nearestSampler), uv).xy;

            float minCoC = minMaxCoC[0];
            float maxCoC = minMaxCoC[1];

            float halfResDist = distance(c, coord) * 8;

            if (halfResDist <= abs(minCoC) + 4)
                dilatedMinCoC = min(dilatedMinCoC, minCoC);
            if (halfResDist <= abs(maxCoC) + 4)
                dilatedMaxCoC = max(dilatedMaxCoC, maxCoC);
        }
    }

    imageStore(
        outDilatedTileMinMaxCoC, coord,
        vec4(dilatedMinCoC, dilatedMaxCoC, 0, 0));
}
